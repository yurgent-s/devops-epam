	Homework.
#Checking that /dev/sdb was added.

[root@localhost ~]# fdisk -l 

Disk /dev/sda: 8589 MB, 8589934592 bytes, 16777216 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x000bdc83

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048     2099199     1048576   83  Linux
/dev/sda2         2099200    16777215     7339008   8e  Linux LVM

Disk /dev/sdb: 5368 MB, 5368709120 bytes, 10485760 sectors  #<----this is it
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/mapper/centos-root: 6652 MB, 6652166144 bytes, 12992512 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes


Disk /dev/mapper/centos-swap: 859 MB, 859832320 bytes, 1679360 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes

1.1 Create a 2GB   !!! GPT !!!   partition on /dev/sdc of type "Linux filesystem" (means all the following partitions created in the following steps on /dev/sdc will be GPT as well)

[root@localhost ~]# gdisk /dev/sdb
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries.

Command (? for help): n
Partition number (1-128, default 1): 1
First sector (34-10485726, default = 2048) or {+-}size{KMGTP}:
Last sector (2048-10485726, default = 10485726) or {+-}size{KMGTP}: +2G
Current type is 'Linux filesystem'
Hex code or GUID (L to show codes, Enter = 8300): 8300
Changed type of partition to 'Linux filesystem'

Command (? for help): w

Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): y
OK; writing new GUID partition table (GPT) to /dev/sdb.
The operation has completed successfully.
[root@localhost ~]# gdisk /dev/sdb
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): p #Checking what i have created
Disk /dev/sdb: 10485760 sectors, 5.0 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): B99CC69F-94E0-454C-8FA8-E1701E620E5A
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 10485726
Partitions will be aligned on 2048-sector boundaries
Total free space is 6291389 sectors (3.0 GiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048         4196351   2.0 GiB     8300  Linux filesystem

1.2 Create a 512MB partition on /dev/sdc of type "Linux swap"

[root@localhost ~]# gdisk /dev/sdb
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): n
Partition number (2-128, default 2):
First sector (34-10485726, default = 4196352) or {+-}size{KMGTP}:
Last sector (4196352-10485726, default = 10485726) or {+-}size{KMGTP}: +512M
Current type is 'Linux filesystem'
Hex code or GUID (L to show codes, Enter = 8300): 8200
Changed type of partition to 'Linux swap'

Command (? for help): w

Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): y
OK; writing new GUID partition table (GPT) to /dev/sdb.
The operation has completed successfully
[root@localhost ~]# gdisk /dev/sdb
GPT fdisk (gdisk) version 0.8.6

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): p #Checking what i have created
Disk /dev/sdb: 10485760 sectors, 5.0 GiB
Logical sector size: 512 bytes
Disk identifier (GUID): B99CC69F-94E0-454C-8FA8-E1701E620E5A
Partition table holds up to 128 entries
First usable sector is 34, last usable sector is 10485726
Partitions will be aligned on 2048-sector boundaries
Total free space is 5242813 sectors (2.5 GiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048         4196351   2.0 GiB     8300  Linux filesystem
   2         4196352         5244927   512.0 MiB   8200  Linux swap

1.3. Format the 2GB partition with an XFS file system

[root@localhost ~]# mkfs.xfs -f -L XFS /dev/sdb1
meta-data=/dev/sdb1              isize=512    agcount=4, agsize=131072 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0, sparse=0
data     =                       bsize=4096   blocks=524288, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal log           bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0

1.4. Initialize 512MB partition as swap space

[root@localhost ~]# mkswap /dev/sdb2 #Initializing swap
Setting up swapspace version 1, size = 524284 KiB
no label, UUID=c93bb97f-b8f1-45ff-91b0-e440f3d6ca5b
[root@localhost ~]# swapon /dev/sdb2 #Enabling swap

1.5  Configure the newly created XFS file system to persistently mount at /backup

[root@localhost ~]# blkid #To receive info about our disc names
/dev/sda1: UUID="afd305e0-cc70-4cc5-860e-44cf9f065d1e" TYPE="xfs"
/dev/sda2: UUID="i3GmTc-xAfJ-AEwE-AI3w-35pl-9H8N-8U1c13" TYPE="LVM2_member"
/dev/sdb1: LABEL="XFS" UUID="e2ec48a4-6bf7-49fd-a79f-8e7301315632" TYPE="xfs" PARTLABEL="Linux filesystem" PARTUUID="c502c531-c7d3-4680-8dbb-c3045361ecbb"
/dev/sdb2: UUID="c93bb97f-b8f1-45ff-91b0-e440f3d6ca5b" TYPE="swap" PARTLABEL="Linux swap" PARTUUID="407c3b3e-709d-4859-b59a-05049c4f8763"
/dev/mapper/centos-root: UUID="1ed72b01-66ba-4a8b-8253-3594709bad3a" TYPE="xfs"
/dev/mapper/centos-swap: UUID="1bc376b3-12e0-4511-8ad2-097dedea8ec4" TYPE="swap"

[root@localhost ~]# mkdir /backup
[root@localhost ~]# mount /dev/sdb1 /backup
#Uptading /etc/fstab to use swap after a system reboot
/dev/sdb1 	/backup		xfs	defaults	0 0

1.6. Configure the newly created swap space to be enabled at boot

#Uptading /etc/fstab to use swap after a system reboot
/dev/sdb2       swap       swap       defaults       0 0

1.7  Reboot your host and verify that /dev/sdc1 is mounted at /backup and that your swap partition  (/dev/sdc2) is enabled

#REBOOTING

[root@localhost ~]# df
Filesystem              1K-blocks    Used Available Use% Mounted on
/dev/mapper/centos-root   6486016 2406608   4079408  38% /
devtmpfs                   929344       0    929344   0% /dev
tmpfs                      941416       0    941416   0% /dev/shm
tmpfs                      941416    8732    932684   1% /run
tmpfs                      941416       0    941416   0% /sys/fs/cgroup
/dev/sdb1                 2086912   32944   2053968   2% /backup 	#here we go, /dev/sdb1 is working
/dev/sda1                 1038336  144876    893460  14% /boot
tmpfs                      188284       0    188284   0% /run/user/0

[root@localhost ~]# cat /proc/swaps
Filename                                Type            Size    Used    Priority
/dev/sdb2                               partition       524284  0       -1 	#all right, swap /dev/sdb2 is enabled too
/dev/dm-1                               partition       839676  0       -2











