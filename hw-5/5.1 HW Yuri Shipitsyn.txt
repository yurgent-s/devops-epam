	Home work.

1.1. SSH to host 35.228.120.217 using username and password, provided to you in private chat. Log out from remotehost

[yuri@localhost ~]$ ssh shipiu@35.228.120.217
The authenticity of host '35.228.120.217 (35.228.120.217)' can't be established.
ECDSA key fingerprint is SHA256:dgVulx3MOrxjhF69TIw8G7TSeyV36IZMZhPpMA+o4mI.
ECDSA key fingerprint is MD5:31:9c:84:18:91:e6:28:6f:ca:86:c0:47:b7:45:a1:ff.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '35.228.120.217' (ECDSA) to the list of known hosts.
shipiu@35.228.120.217's password: 
Last login: Tue Nov  6 19:15:46 2018 from 46.229.218.249
[shipiu@new-students-ssh ~]$ logout

1.2 Generate new ssh key-pair on your localhost with name "hw-5" (keys should be created in ~/.ssh folder)

[yuri@localhost .ssh]$ ssh-keygen ##creating a new ssh key-pair in ~/.ssh
Generating public/private rsa key pair.
Enter file in which to save the key (/home/yuri/.ssh/id_rsa): hw-5
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in hw-5.
Your public key has been saved in hw-5.pub.
The key fingerprint is:
SHA256:vNegiGxDmX1n3AcGHLHqNyOGfWpxoN02p9kdFNNl7dE yuri@localhost.localdomain
The key's randomart image is:
+---[RSA 2048]----+
|         .+o   .*|
|          .o  ooE|
|          . o  +.|
|     + ..o o .. .|
|    + .oSo= ...  |
|   o ..*o==o...  |
|    = o B+**.. . |
|   . . ..*oo. .  |
|       ..        |
+----[SHA256]-----+
[yuri@localhost .ssh]$ ls #checking what have been created
hw-5  hw-5.pub  known_hosts

1.3 Set up key-based authentication, so that you can ssh to remotehost without password

[yuri@localhost .ssh]$ ssh-copy-id -i ~/.ssh/hw-5.pub shipiu@35.228.120.217
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/yuri/.ssh/h                                                                             w-5.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter                                                                              out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompt                                                                             ed now it is to install the new keys
shipiu@35.228.120.217's password:

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'shipiu@35.228.120.217'"
and check to make sure that only the key(s) you wanted were added.

1.4 SSH to remotehost without password. Log out from remotehost

[yuri@localhost .ssh]$ ssh -i /home/yuri/.ssh/hw-5 shipiu@35.228.120.217
Last login: Thu Nov 15 00:10:22 2018 from 95-27-41-100.broadband.corbina.ru
[shipiu@new-students-ssh ~]$ logout
Connection to 35.228.120.217 closed.

1.5 Create ssh config file so that you can ssh to remotehost simply running `ssh remotehost`. As a result provide output of command `cat ~/.ssh/config`

[yuri@localhost .ssh]$ vim config

Host remotehost
Hostname 35.228.120.217
User shipiu
IdentityFile ~/.ssh/hw-5

[yuri@localhost .ssh]$ chmod 644 config ##only with these rules config started working on my localhost
[yuri@localhost .ssh]$ ssh remotehost
Last login: Thu Nov 15 14:10:55 2018 from 91.238.230.13
[shipiu@new-students-ssh ~]$

1.6. Using command line utility (curl or telnet) verify that there are some webserver running on port 8080 of IP 10.166.0.2. Notice that 10.166.0.2 is a private network IP so you can access it only from the same network (when you're on remotehost, that runs in the same private network). Log out from remotehost

[yuri@localhost ~]$ ssh remotehost
Last login: Thu Nov 15 14:24:46 2018 from 91.238.230.13
[shipiu@new-students-ssh ~]$ curl -v telnet://10.166.0.2:8080
* About to connect() to 10.166.0.2 port 8080 (#0)
*   Trying 10.166.0.2...
* Connected to 10.166.0.2 (10.166.0.2) port 8080 (#0)
^C
[shipiu@new-students-ssh ~]$ ^C
[shipiu@new-students-ssh ~]$ logout
Connection to 35.228.120.217 closed.

1.7. Using ssh setup port forwarding so that you can reach webserver from your localhost (choose any free local port you like).

[yuri@localhost ~]$ ssh -L 5900:127.0.0.1:8080 10.166.0.2 ##as i understand, we just opening port for webserver and there dont have to be any text messaging about it underneath
^C

1.8 Like in 1.6, but on localhost this time use command line utility to verify that localhost and port you've specified act like webserver, returning same result as in 1.6

[root@localhost yuri]# nmap -p 8080 10.166.0.2

Starting Nmap 6.40 ( http://nmap.org ) at 2018-11-16 20:20 MSK
Nmap scan report for 10.166.0.2
Host is up (0.00069s latency).
PORT     STATE    SERVICE
8080/tcp filtered http-proxy

Nmap done: 1 IP address (1 host up) scanned in 0.28 seconds

##According to a result of nmap command, we v listened 8080 port of 10.166.0.2, as it is running on working http-proxy therefore it is webserver.






